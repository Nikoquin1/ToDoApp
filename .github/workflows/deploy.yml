name: Deploy to VM (from Docker Hub)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag a desplegar (ej: v0.2.0)."
        required: true

concurrency:
  group: deploy-production
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted, linux, deploy]

    env:
      IMAGE: docker.io/nikoquin/todoapp

    steps:
      - name: Checkout (infra)
        uses: actions/checkout@v4

      - name: Determinar VERSION (manual)
        id: choose
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${{ github.event.inputs.tag || '' }}" ]; then
            echo "version=${{ github.event.inputs.tag }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Export VERSION
        shell: bash
        run: |
          set -euo pipefail
          VER="${{ steps.choose.outputs.version }}"
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "Usando VERSION=$VER"

      - name: Check VERSION is defined
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${VERSION:-}" ]; then
            echo "VERSION no definido. No puedo continuar."
            exit 1
          fi

      - name: Render .env.prod
        shell: bash
        run: |
          set -euo pipefail
          cat > .env.prod << 'EOF'
          # App
          PORT=3000
          MYSQL_HOST=db
          MYSQL_PORT=3306
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DB=${{ secrets.MYSQL_DB }}
          # DB
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          EOF

      - name: Copiar archivos y hacer deploy local
        shell: bash
        run: |
            set -euo pipefail
            # Check that all necessary files exist before copying
            test -f docker-compose.prod.yml
            test -f .env.prod
            test -f nginx/default.conf   # <-- This line ensures the file is present

            sudo mkdir -p /opt/todoapp
            sudo cp docker-compose.prod.yml .env.prod nginx/default.conf /opt/todoapp/
            cd /opt/todoapp
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            sudo mv -f .env.prod .env
            echo "$VERSION" | sudo tee DEPLOYED_VERSION.txt
            sudo VERSION="$VERSION" docker compose -f docker-compose.prod.yml pull
            sudo VERSION="$VERSION" docker compose -f docker-compose.prod.yml up -d --remove-orphans
            sudo docker image prune -f