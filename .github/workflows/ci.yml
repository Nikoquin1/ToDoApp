name: CI (compose tests + build)

on:
  workflow_dispatch:
  pull_request:
    branches: [ develop, master ]
  push:
    branches: [ develop ]

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Validación rápida del lockfile (opcional)
      - name: Set up Node & validate lockfile
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
      - name: Install deps (lockfile validation)
        run: |
          corepack enable
          corepack prepare yarn@1.22.22 --activate
          yarn install --frozen-lockfile --network-timeout 600000

      # ⬇️ NUEVO: crear .env.ci desde GitHub Secrets
      - name: Prep env/secrets for compose (CI)
        run: |
          cat > .env.ci <<'EOF'
          PORT=3000
          MYSQL_HOST=db
          MYSQL_PORT=3306
          MYSQL_USER=${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DB=${{ secrets.MYSQL_DB }}
          MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
          EOF

      # Corre tests con compose (usa .env.ci)
      - name: Run tests with Docker Compose
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          docker compose --env-file .env.ci -f docker-compose.test.yml up --build --exit-code-from app-tests
          docker compose --env-file .env.ci -f docker-compose.test.yml down -v

      # Solo si los tests pasan, construimos la imagen de prod
      - name: Build production image
        run: docker build -t todoapp-ci:latest .

